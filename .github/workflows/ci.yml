name: continuous integration

on:
  pull_request:

# The following urls will soon be removed, API keys invalidated and RPC urls will be provided as secrets

env:
  BEERUS_VERSION: ci
  ETHEREUM_NETWORK: mainnet
#  ETHEREUM_CONSENSUS_RPC_URL: ${{ secrets.ETHEREUM_CONSENSUS_RPC_URL }}
  ETHEREUM_CONSENSUS_RPC_URL: https://www.lightclientdata.org
#  ETHEREUM_EXECUTION_RPC_URL: ${{ secrets.ETHEREUM_EXECUTION_RPC_URL }}
  ETHEREUM_EXECUTION_RPC_URL: https://eth-mainnet.g.alchemy.com/v2/nveGwZH-6VJciyEwZb3C1iblkZWj3Fcj
#  STARKNET_RPC_URL: ${{ secrets.STARKNET_RPC_URL }}
  STARKNET_RPC_URL: https://starknet-mainnet.infura.io/v3/a77771c7226a447bada27e682ae743bd

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the source code
      - name: Checkout
        uses: actions/checkout@v3
      # Setup docker
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      # Build and export the beerus docker image
      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: beerus:${{ env.BEERUS_VERSION }}
          outputs: type=docker,dest=/tmp/beerus.tar
      # Upload the beerus docker image as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: beerus
          path: /tmp/beerus.tar

  e2e-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout the source code
      - name: Checkout
        uses: actions/checkout@v3
      # Install hurl
      - name: Install dependencies
        run: |
          curl --location --remote-name https://github.com/Orange-OpenSource/hurl/releases/download/2.0.1/hurl_2.0.1_amd64.deb
          sudo apt-get update && sudo apt-get install -y ./hurl_2.0.1_amd64.deb
      # Download the beerus docker image
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: beerus
          path: /tmp
      # Load the beerus docker image
      - name: Load docker image
        run: |
          docker load --input /tmp/beerus.tar
          docker image ls -a
      # Run beerus RPC in the background
      - name: Run beerus
        run: |
          docker run -d -p 3030:3030 -p 3031:3031 --env ETHEREUM_NETWORK="mainnet" --env ETHEREUM_CONSENSUS_RPC_URL="https://www.lightclientdata.org" --env ETHEREUM_EXECUTION_RPC_URL="https://eth-mainnet.g.alchemy.com/v2/spl1o-SnCzLfKdNt-_-BxQ0lsJmR3FLU" --env STARKNET_RPC_URL="https://starknet-mainnet.infura.io/v3/a77771c7226a447bada27e682ae743bd" beerus:ci
          hurl --retry --retry-max-count 60 ./examples/beerus-rpc/starknet/starknet_blockNumber.hurl > /dev/null;
      - name: Call a ci failing endpoint
        run: |
          curl -X POST http://0.0.0.0:3030 \
          -H 'Content-Type: application/json' \
          -d '{
              "jsonrpc": "2.0",
              "method": "starknet_l1ToL2MessageNonce",
              "params": [],
              "id": 1
          }'
        continue-on-error: true
      # Capture docker logs
      - name: Capture docker logs
        run: |
          docker ps
          docker logs $(docker ps -q) >& docker_logs.txt
          cat docker_logs.txt
      # Upload the docker logs
      - name: Upload docker logs
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: docker-logs
          path: docker_logs.txt
      # Generate job summary
      - name: Generate job summary
        run: cat summary.md >> $GITHUB_STEP_SUMMARY
      # Fail the job if the script step has failed
      - name: Check for script failure
        run: |
          if [[ "${{ steps.e2e_test.outcome }}" == "failure" ]]; then
            exit 1
          fi
